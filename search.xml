<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Demo</title>
    <url>//post/demo/</url>
    <content><![CDATA[<h1 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h1><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>
<a id="more"></a>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>

<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>

<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote>

<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">alert</span>(<span class="string">&#x27;Hello World!&#x27;</span>);</span></span><br></pre></td></tr></table></figure>

<figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><figcaption><span>Array.map</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">array</span>.<span class="built_in">map</span>(callback[, thisArg])</span><br></pre></td></tr></table></figure>

<figure class="highlight excel"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="code"><pre><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">false</span>, <span class="number">2</span>, &#x27;&#x27;, <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>

<p><code>[language] [title] [url] [link text] code snippet</code></p>
<h1 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h1><blockquote class="pullquote [class]"><p>content</p>
</blockquote>

<h1 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h1><figure class="highlight java"><figcaption><span>ClaimAccessor.java</span><a href="/downloads/code/ClaimAccessor.java">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">default</span> String <span class="title">getClaimAsString</span><span class="params">(String claim)</span> </span>{</span><br><span class="line">		<span class="keyword">if</span> (!<span class="keyword">this</span>.containsClaim(claim)) {</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		}</span><br><span class="line">		Object claimValue = <span class="keyword">this</span>.getClaims().get(claim);</span><br><span class="line">		<span class="keyword">return</span> (claimValue != <span class="keyword">null</span> ? claimValue.toString() : <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Demo</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>设计模式</tag>
        <tag>DDD领域驱动设计</tag>
        <tag>操作系统</tag>
        <tag>算法</tag>
        <tag>重构</tag>
        <tag>JAVA</tag>
        <tag>多线程</tag>
        <tag>分布式</tag>
        <tag>MySQL</tag>
        <tag>Redis</tag>
        <tag>Netty</tag>
        <tag>Zookeeper</tag>
        <tag>Scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title>重构</title>
    <url>//post/refactoring/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>重构(名词)对软件内部结构的一种调整,目的是在不改变软件可观察行为的前提下,提高其可理解性,降低其修改成本。</p>
<p>重构(动词)使用一系列重构手法,在不改变软件可观察行为的前提下,调整其结构。</p>
<a id="more"></a>

<h1 id="代码的坏味道"><a href="#代码的坏味道" class="headerlink" title="代码的坏味道"></a>代码的坏味道</h1><ol>
<li>Duplicated Code 重复的代码</li>
<li>Long Method 过长函数</li>
<li>Large Class 过大的类</li>
<li>Long Parameter List 过长参数列</li>
<li>Divergent Change 发散式变化</li>
<li>Shotgun Surgery 霰弹式修改</li>
<li>Feature Envy 依恋情结</li>
<li>Data Clumps 数据泥团</li>
<li>Primitive Obsession 基本类型偏执</li>
<li>Switch Statements switch语句</li>
<li>Parallel Inheritance Hierarchies 平行继承体系</li>
<li>Lazy Class 冗赘类</li>
<li>Speculative Generality 夸夸其谈未来性</li>
<li>Temporary Field 令人迷惑的暂时字段</li>
<li>Message Chains 过度耦合的消息链</li>
<li>Middle Man 中间人</li>
<li>Inappropriate Intimacy 狎昵关系</li>
<li>Alternative Classes with Different Interfaces 异曲同工的类</li>
<li>Incomplete Library Class 不完美的库类</li>
<li>Data Class 纯稚的数据类</li>
<li>Refused Bequest 被拒绝的遗赠</li>
<li>Comments 过多的注释</li>
</ol>
<h1 id="重构列表"><a href="#重构列表" class="headerlink" title="重构列表"></a>重构列表</h1><h2 id="重新组织函数"><a href="#重新组织函数" class="headerlink" title="重新组织函数"></a>重新组织函数</h2><ol>
<li>Extract Method 提炼函数</li>
<li>Inline Method 内联函数</li>
<li>Inline Temp 内联临时变量</li>
<li>Replace Temp with Query 以查询取代临时变量</li>
<li>Introduce Explaining Variable 引入解释性变量</li>
<li>Split Temporary Variable 分解临时变量</li>
<li>Remove Assignments to Parameters 移除对参数的赋值</li>
<li>Replace Method with Method Object 以函数对象取代函数</li>
<li>Substitute Algorithm 替换算法</li>
</ol>
<h2 id="在对象之间搬移特性"><a href="#在对象之间搬移特性" class="headerlink" title="在对象之间搬移特性"></a>在对象之间搬移特性</h2><ol>
<li>Move Method 搬移函数</li>
<li>Move Field 搬移字段</li>
<li>Extract Class 提炼类</li>
<li>Inline Class 将类内联化</li>
<li>Hide Delegate 隐藏委托关系</li>
<li>Remove Middle Man 移除中间人</li>
<li>Introduce Foreign Method 引入外加函数</li>
<li>Introduce Local Extension 引入本地扩展</li>
</ol>
<h2 id="重新组织数据"><a href="#重新组织数据" class="headerlink" title="重新组织数据"></a>重新组织数据</h2><ol>
<li>Self Encapsulate Field 自封装字段</li>
<li>Replace Data Value with Object 以对象取代数据值</li>
<li>Change Value to Reference 将值对象改为引用对象</li>
<li>Change Reference to Value 将引用对象改为值对象</li>
<li>Replace Array with Object 以对象取代数组</li>
<li>Duplicate Observed Data 复制被监视数据</li>
<li>Change Unidirectional Association to Bidirectional 将单向关联改为双向关联</li>
<li>Change Bidirectional Association to Unidirectional 将双向关联改为单向关联</li>
<li>Replace Magic Number with Symbolic Constant 以字面常量取代魔法数</li>
<li>Encapsulate Field 封装字段</li>
<li>Encapsulate Collection 封装集合</li>
<li>Replace Record with Data Class 以数据类取代记录</li>
<li>Replace Type Code with Class 以类取代类型码</li>
<li>Replace Type Code with Subclasses 以子类取代类型码</li>
<li>Replace Type Code with State/Strategy 以 State/ Strategy取代类型码</li>
<li>Replace Subclass with Fields 以字段取代子类</li>
</ol>
<h2 id="简化条件表达式"><a href="#简化条件表达式" class="headerlink" title="简化条件表达式"></a>简化条件表达式</h2><ol>
<li>Decompose Conditional 分解条件表达式</li>
<li>Consolidate Conditional Expression 合并条件表达式</li>
<li>Consolidate Duplicate Conditional Fragments 合并重复的条件片段</li>
<li>Remove Control Flag 移除控制标记</li>
<li>Replace Nested Conditional with Guard Clauses 以卫语句取代嵌套条件表达式</li>
<li>Replace Conditional with Polymorphism 以多态取代条件表达式</li>
<li>Introduce Null Object 引入Null对象</li>
<li>Introduce Assertion 引入断言</li>
</ol>
<h2 id="简化函数调用"><a href="#简化函数调用" class="headerlink" title="简化函数调用"></a>简化函数调用</h2><ol>
<li>Rename Method 函数改名</li>
<li>Add Parameter 添加参数</li>
<li>Remove Parameter 移除参数</li>
<li>Separate Query from Modifier 将查询函数和修改函数分离</li>
<li>Parameterize Method 令函数携带参数</li>
<li>Replace Parameter with Explicit Methods 以明确函数取代参数</li>
<li>Preserve Whole Object 保持对象完整</li>
<li>Replace Parameter with Methods 以函数取代参数</li>
<li>Introduce Parameter Object 引入参数对象</li>
<li>Remove Setting Method 移除设值函数</li>
<li>Hide Method 隐藏函数</li>
<li>Replace Constructor with Factory Method 以工厂函数取代构造函数</li>
<li>Encapsulate Downcast 封装向下转型</li>
<li>Replace Error Code with Exception 以异常取代错误码</li>
<li>Replace Exception with Test以测试取代异常</li>
</ol>
<h2 id="处理泛化关系"><a href="#处理泛化关系" class="headerlink" title="处理泛化关系"></a>处理泛化关系</h2><ol>
<li>Pull Up Field 字段上移</li>
<li>Pull Up Method 函数上移</li>
<li>Pull Up Constructor Body 构造函数本体上移</li>
<li>Push Down Method 函数下移</li>
<li>Push Down Field 字段下移</li>
<li>Extract Subclass 提炼子类</li>
<li>Extract Superclass 提炼超类</li>
<li>Extract Interface 提炼接口</li>
<li>Collapse Hierarchy 折叠继承体系</li>
<li>Form Template Method 塑造模板函数</li>
<li>Replace Inheritance with Delegation 以委托取代继承</li>
<li>Replace Delegation with Inheritance 以继承取代委托</li>
</ol>
]]></content>
      <categories>
        <category>重构</category>
      </categories>
      <tags>
        <tag>重构</tag>
        <tag>Theme Page</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Security</title>
    <url>//post/spring-security/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Spring Security是一个强大且高度可定制的认证和访问控制框架。它是保护基于Spring的应用程序的事实标准。</p>
<a id="more"></a>

<p>Spring Security是一个专注于为Java应用提供认证和授权的框架。像所有的Spring项目一样，Spring Security的真正强大之处在于它可以很容易地被扩展以满足客户的要求。</p>
<h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><ul>
<li><a href="https://spring.io/guides/gs/securing-web/">官方快速入门</a></li>
</ul>
<h1 id="使用篇"><a href="#使用篇" class="headerlink" title="使用篇"></a>使用篇</h1><ol>
<li>环境搭建</li>
<li>Spring Security 基础</li>
</ol>
<h1 id="开发篇"><a href="#开发篇" class="headerlink" title="开发篇"></a>开发篇</h1><ol>
<li>密码的进化和验证</li>
<li>深入 Spring Security 认证</li>
<li>构建基于 JWT 的认证</li>
<li>基于角色的用户权限</li>
<li>基于数据库的 RBAC</li>
<li>实现符合 OAuth 2 标准的授权服务器</li>
<li>Spring Security 更多了解</li>
</ol>
<h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><ul>
<li><a href="https://docs.spring.io/spring-security/site/docs/current/reference/html5/">官方参考文档</a></li>
<li><a href="https://docs.spring.io/spring-security/site/docs/current/api/">官方 API 文档</a></li>
</ul>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><ul>
<li>略</li>
</ul>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><ul>
<li>名词解释</li>
<li>最佳实践</li>
</ul>
]]></content>
      <categories>
        <category>Spring</category>
        <category>Spring Security</category>
      </categories>
      <tags>
        <tag>Spring</tag>
        <tag>Theme Page</tag>
        <tag>Spring Security</tag>
        <tag>Security</tag>
      </tags>
  </entry>
</search>
